// This file is to host the demo on our documentation platform. You don't need this.

pipeline {
  agent { label 'ecs' }

  environment {
    CONTAINER_NAME = 'frontend-automator-react'
    CONTAINER_URL = '016352445818.dkr.ecr.eu-west-1.amazonaws.com/frontend-automator-react'
    CONTAINER_URL_NUMBER = "${CONTAINER_URL}:${BRANCH_NAME.replaceAll('[^a-zA-Z0-9-]', '').toLowerCase()}-${BUILD_NUMBER}"
    CONTAINER_URL_BRANCH = "${CONTAINER_URL}:${BRANCH_NAME.replaceAll('[^a-zA-Z0-9-]', '').toLowerCase()}"
    STACK_NAME = "${env.JOB_NAME}"
    BUILD_TAG_PARSED = "${env.BUILD_TAG.replaceAll('[^a-zA-Z0-9-]', '').toLowerCase()}"
    SENTRY_VERSION = "${BRANCH_NAME.replaceAll('[^a-zA-Z0-9-]', '').toLowerCase()}-${BUILD_NUMBER}"
    SCANNER_HOME = tool 'SonarQube Scanner 2.8'
  }

  stages {
    stage('Credentials/Meta') {
      steps {
        sh '$(aws ecr get-login --no-include-email --region eu-west-1)'
      }
    }

    stage('Build') {
      steps {
        sh 'docker run -v ${WORKSPACE}:/app -w /app --rm node:8 yarn install'
        sh 'docker run -v ${WORKSPACE}:/app -w /app --rm node:8 yarn run build'
      }
    }

    stage('Package') {
      steps {
        sh 'docker build --pull -t ${BUILD_TAG_PARSED} .'
      }
    }

    stage('Register') {
      steps {
        sh 'docker tag ${BUILD_TAG_PARSED} ${CONTAINER_URL_NUMBER} && docker push ${CONTAINER_URL_NUMBER}'
        sh 'docker tag ${BUILD_TAG_PARSED} ${CONTAINER_URL_BRANCH} && docker push ${CONTAINER_URL_BRANCH}'

        script {
            currentBuild.description = "${CONTAINER_URL_NUMBER} | ${CONTAINER_URL_BRANCH}"
        }
      }
    }

    stage('SonarQube') {
      steps {
        withSonarQubeEnv('SonarQube') {
          sh "echo ${SCANNER_HOME}"
          sh "${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=${CONTAINER_NAME} -Dsonar.sources=./src -Dsonar.projectVersion=${SENTRY_VERSION}"
        }
      }
    }
  }
}